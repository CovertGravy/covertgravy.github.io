{"version":3,"sources":["../node_modules/topbar/topbar.js","scripts/main.js"],"names":["topbar","show","config","shadowColor","loadingElement","document","querySelector","heroSection","header","onreadystatechange","readyState","setTimeout","style","display","hide","heroSectionObserver","IntersectionObserver","entries","forEach","entry","isIntersecting","classList","remove","add","rootMargin","observe"],"mappings":"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","file":"main.9b9a9a52.js","sourceRoot":"../src","sourcesContent":["/*! topbar 0.1.4, 2020-04-27\n *  http://buunguyen.github.io/topbar\n *  Copyright (c) 2019 Buu Nguyen\n *  Licensed under the MIT License */\n;(function(window, document) {\n    'use strict'\n\n    // https://gist.github.com/paulirish/1579671\n    ;(function() {\n        var lastTime = 0;\n        var vendors = ['ms', 'moz', 'webkit', 'o'];\n        for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n            window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n            window.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame']\n                || window[vendors[x]+'CancelRequestAnimationFrame'];\n        }\n        if (!window.requestAnimationFrame)\n            window.requestAnimationFrame = function(callback, element) {\n                var currTime = new Date().getTime();\n                var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n                var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n                    timeToCall);\n                lastTime = currTime + timeToCall;\n                return id;\n            };\n        if (!window.cancelAnimationFrame)\n            window.cancelAnimationFrame = function(id) {\n                clearTimeout(id);\n            };\n    }());\n\n    var canvas, progressTimerId, fadeTimerId, currentProgress, showing,\n        addEvent = function(elem, type, handler) {\n            if (elem.addEventListener) elem.addEventListener(type, handler, false)\n            else if (elem.attachEvent) elem.attachEvent('on' + type, handler)\n            else                       elem['on' + type] = handler\n        },\n        options = {\n            autoRun      : true,\n            barThickness : 3,\n            barColors    : {\n                '0'      : 'rgba(26,  188, 156, .9)',\n                '.25'    : 'rgba(52,  152, 219, .9)',\n                '.50'    : 'rgba(241, 196, 15,  .9)',\n                '.75'    : 'rgba(230, 126, 34,  .9)',\n                '1.0'    : 'rgba(211, 84,  0,   .9)'\n            },\n            shadowBlur   : 10,\n            shadowColor  : 'rgba(0,   0,   0,   .6)',\n            className    : null,\n        },\n        repaint = function() {\n            canvas.width = window.innerWidth\n            canvas.height = options.barThickness * 5 // need space for shadow\n\n            var ctx = canvas.getContext('2d')\n            ctx.shadowBlur = options.shadowBlur\n            ctx.shadowColor = options.shadowColor\n\n            var lineGradient = ctx.createLinearGradient(0, 0, canvas.width, 0)\n            for (var stop in options.barColors)\n                lineGradient.addColorStop(stop, options.barColors[stop])\n            ctx.lineWidth = options.barThickness\n            ctx.beginPath()\n            ctx.moveTo(0, options.barThickness/2)\n            ctx.lineTo(Math.ceil(currentProgress * canvas.width), options.barThickness/2)\n            ctx.strokeStyle = lineGradient\n            ctx.stroke()\n        },\n        createCanvas = function() {\n            canvas = document.createElement('canvas')\n            var style = canvas.style\n            style.position = 'fixed'\n            style.top = style.left = style.right = style.margin = style.padding = 0\n            style.zIndex = 100001\n            style.display = 'none'\n            if (options.className)\n                canvas.classList.add(options.className)\n            document.body.appendChild(canvas)\n            addEvent(window, 'resize', repaint)\n        },\n        topbar = {\n            config: function(opts) {\n                for (var key in opts)\n                    if (options.hasOwnProperty(key))\n                        options[key] = opts[key]\n            },\n            show: function() {\n                if (showing) return\n                showing = true\n                if (fadeTimerId !== null)\n                    window.cancelAnimationFrame(fadeTimerId)\n                if (!canvas) createCanvas()\n                canvas.style.opacity = 1\n                canvas.style.display = 'block'\n                topbar.progress(0)\n                if (options.autoRun) {\n                    (function loop() {\n                        progressTimerId = window.requestAnimationFrame(loop)\n                        topbar.progress('+' + (.05 * Math.pow(1-Math.sqrt(currentProgress), 2)))\n                    })()\n                }\n            },\n            progress: function(to) {\n                if (typeof to === \"undefined\")\n                    return currentProgress\n                if (typeof to === \"string\") {\n                    to = (to.indexOf('+') >= 0 || to.indexOf('-') >= 0 ? currentProgress : 0) + parseFloat(to)\n                }\n                currentProgress = to > 1 ? 1 : to\n                repaint()\n                return currentProgress\n            },\n            hide: function() {\n                if (!showing) return\n                showing = false\n                if (progressTimerId != null) {\n                    window.cancelAnimationFrame(progressTimerId)\n                    progressTimerId = null\n                }\n                (function loop() {\n                    if (topbar.progress('+.1') >= 1) {\n                        canvas.style.opacity -= .05\n                        if (canvas.style.opacity <= .05) {\n                            canvas.style.display = 'none'\n                            fadeTimerId = null\n                            return\n                        }\n                    }\n                    fadeTimerId = window.requestAnimationFrame(loop)\n                })()\n            }\n        }\n\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        module.exports = topbar\n    } else if (typeof define === 'function' && define.amd) {\n        define(function() { return topbar })\n    } else {\n        this.topbar = topbar\n    }\n}).call(this, window, document)\n","import 'normalize.css';\nimport '../css/loco-base.css';\nimport '../css/style.scss';\n\nimport topbar from 'topbar';\n// import VanillaTilt from 'vanilla-tilt';\n\ntopbar.show();\ntopbar.config({\n  shadowColor: 'rgba(0, 0, 0, .1)',\n});\n\nconst loadingElement = document.querySelector('#loading');\nconst heroSection = document.querySelector('#hero');\nconst header = document.querySelector('header');\n\n// VanillaTilt.init(document.querySelector('.about-figure'), {\n//   max: 15,\n//   speed: 200,\n//   scale: 1.1,\n// });\n\ndocument.onreadystatechange = function () {\n  if (document.readyState === 'complete') {\n    setTimeout(() => {\n      loadingElement.style.display = 'none';\n      topbar.hide();\n    }, 1800);\n  }\n};\n\nconst heroSectionObserver = new IntersectionObserver(\n  function (entries, heroSectionObserver) {\n    entries.forEach((entry) => {\n      if (!entry.isIntersecting) {\n        header.classList.add('header-scrolled');\n      } else {\n        header.classList.remove('header-scrolled');\n      }\n    });\n  },\n  {\n    rootMargin: '-90% 0px 0px 0px',\n  }\n);\n\nheroSectionObserver.observe(heroSection);\n"]}